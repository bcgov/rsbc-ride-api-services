##########################################
#Common Config
##########################################
spring.mvc.pathmatch.matching-strategy=ant-path-matcher

spring.application.name=jh-etk-paymentsvc
spring.cloud.kubernetes.leader.config-map-name=${CONFIG_MAP_NAME:jh-etk-paymentsvc}

# server.servlet.context-path=/payment/v3
server.servlet.context-path=/paymentsvc/api/v1

swagger.base.package=bcgov.jh.etk.paymentsvc.controller

server.port=${LOCAL_DEV_PORT:8080}

########################################## 
# DEV/TEST/PROD config
##########################################
spring.data.mongodb.uri=${MONGODB_URI:mongodb://${MONGODB_USERNAME:root}:${MONGODB_PASSWORD:password1234}@localhost:27017/?directConnection=true}
spring.data.mongodb.database=${MONGODB_DATABASE:ride-services-db}

spring.mail.host=${EMAIL_HOST:test}

custom.emailFrom=${CUSTOM_ERROR_EMAILFROM:JH-ETK@Dev <donotreply@gov.bc.ca>}
custom.emailTo=${CUSTOM_ERROR_EMAILTO:norepltest@gov.bc.c}
custom.error.subject.prefix=${CUSTOM_ERROR_SUBJECT_PREFIX:VPH error occurred:}
custom.error.url.prefix=${CUSTOM_ERROR_URL_PREFIX:test}

icbc.ping.service.uri=${ICBC_PINGSERVICE_ENDPOINT_URI:http://localhost:8099/mocksvc/v3/icbc/utility/echo}
icbc.payment.service.uri=${ICBC_PAYMENTSERVICE_ENDPOINT_URI:http://localhost:8099/mocksvc/v3/rest/PSSGVPHPAYBC/vph/rcpts}
icbc.payment.service.username=${ICBC_PAYMENTSERVICE_USERNAME:VPHUser}
icbc.payment.service.password=${ICBC_PAYMENTSERVICE_PASSWORD:notset}

ride.producer.service.url=${RIDE_PRODUCER_URL:http://localhost:9090}
ride.producer.service.api.key=${RIDE_PRODUCER_API_KEY: ad137f1e-79d1-45ec-9cf3-02b2525667e8}

paybc_individual_invoice_endpoint_url_prefix=${PAYBC_INDIVIDUAL_INVOICE_ENDPOINT_URL_PREFIX:test}

logging.level.bcgov.jh.etk=${LOG_LEVEL:DEBUG}
logging.splunk.url=${SPLUNK_URL:test}
logging.splunk.token=${SPLUNK_TOKEN:test}
logging.splunk.channel=${SPLUNK_CHANNEL:test}

service.retry.count=${SERVICE_NUMBER_OF_RETRY:1}
service.retry.wait.ms=${SERVICE_RETRY_WAIT_MS:5000}
service.connection.timeout.ms=${SERVICE_CONNECTION_TIMEOUT_MS:15000}
service.read.timeout.ms=${SERVICE_READ_TIMEOUT_MS:45000}

svc.security.user.name=${API_USER_NAME:test}
svc.security.user.password=${API_USER_PASSWORD:test}

pod.ip=${POD_IP:notset}
pod.name=${POD_NAME:notset}

circuit.breaker.sliding.window.size=${CIRCUIT_BREAKER_SLIDING_WINDOW_SIZE:3}
circuit.breaker.calls.in.half.open.state=${CIRCUIT_BREAKER_CALLS_IN_HALF_OPEN_STATE:1}
circuit.breaker.failure.rate.threshold=${CIRCUIT_BREAKER_FAILURE_RATE_THRESHOLD:50}
circuit.breaker.wait.duration.in.open.state=${CIRCUIT_BREAKER_WAIT_DURATION_IN_OPEN_STATE:60000}
# Enable Prometheus endpoint
management.endpoints.web.exposure.include=prometheus
management.endpoint.prometheus.enabled=true
