/*
 * RSBC Hub Event API
 * # Summary Event API for the Road Safety BC Hub.  # Version naming convention  X.y - where x = major (breaking) changes, and y = minor (non-breaking) changes.  # Change log  | version | date       | description | | ------- | ---------- | -----------------------------| | 1.1     | 2020-01-30 | JHI-815 Initial event publish API| | 1.2     | 2020-02-19 | JHi-940 Add offender_type_name to EVT_Issuance data model| |         |            | JHi-940 Add non-breaking changes to support event lookup| | 1.3     | 2020-04-21 | JHI-1145 updated API to include additional data elements identified in BI-852 | | 1.4     | 2020-06-19 | JHI-1246 updated API to include payment transaction id | | 1.5     | 2020-08-05 | JHI-1474 Wording Number Field Required for Violation Records | | 1.6     | 2021-06-30 | JHI-1329 Add the ability to record additional ETK processing events | 
 *
 * OpenAPI spec version: 1.6
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package bcgov.jh.etk.jhetkcommon.model.eventing;

import java.util.Objects;
import bcgov.jh.etk.jhetkcommon.model.eventing.EVTIssuance;
import bcgov.jh.etk.jhetkcommon.model.eventing.EVTPurged;
import bcgov.jh.etk.jhetkcommon.model.eventing.EVTSent;
import bcgov.jh.etk.jhetkcommon.model.eventing.VTDispute;
import bcgov.jh.etk.jhetkcommon.model.eventing.VTDisputeFinding;
import bcgov.jh.etk.jhetkcommon.model.eventing.VTDisputeStatusUpdate;
import bcgov.jh.etk.jhetkcommon.model.eventing.VTPayment;
import bcgov.jh.etk.jhetkcommon.model.eventing.VTQuery;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import bcgov.jh.etk.jhetkcommon.annotation.deserializer.OffsetDateTimeDeserializer;
import bcgov.jh.etk.jhetkcommon.annotation.serializer.OffsetDateTimeSerializer;

/**
 * Event
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-07-02T15:57:15.869-07:00")
public class Event implements Comparable<Event>{
  @JsonProperty("event_id")
  private Integer eventId = null;

  @JsonProperty("event_version")
  private String eventVersion = null;

  @JsonProperty("event_date_time")
  @JsonDeserialize(using = OffsetDateTimeDeserializer.class)
  @JsonSerialize(using = OffsetDateTimeSerializer.class)
  private OffsetDateTime eventDateTime = null;

  /**
   * Gets or Sets eventType
   */
  public enum EventTypeEnum {
    EVT_ISSUANCE("evt_issuance"),
    
    VT_QUERY("vt_query"),
    
    VT_PAYMENT("vt_payment"),
    
    VT_DISPUTE("vt_dispute"),
    
    VT_DISPUTE_STATUS_UPDATE("vt_dispute_status_update"),
    
    VT_DISPUTE_FINDING("vt_dispute_finding"),
    
    EVT_SENT("evt_sent"),
    
    EVT_PURGED("evt_purged");

    private String value;

    EventTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static EventTypeEnum fromValue(String text) {
      for (EventTypeEnum b : EventTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("event_type")
  private EventTypeEnum eventType = null;

  @JsonProperty("evt_issuance")
  private EVTIssuance evtIssuance = null;

  @JsonProperty("vt_query")
  private VTQuery vtQuery = null;

  @JsonProperty("vt_payment")
  private VTPayment vtPayment = null;

  @JsonProperty("vt_dispute")
  private VTDispute vtDispute = null;

  @JsonProperty("vt_dispute_status_update")
  private VTDisputeStatusUpdate vtDisputeStatusUpdate = null;

  @JsonProperty("vt_dispute_finding")
  private VTDisputeFinding vtDisputeFinding = null;

  @JsonProperty("evt_sent")
  private EVTSent evtSent = null;

  @JsonProperty("evt_purged")
  private EVTPurged evtPurged = null;

  public Event eventId(Integer eventId) {
    this.eventId = eventId;
    return this;
  }

   /**
   * Get eventId
   * @return eventId
  **/
  @ApiModelProperty(required = true, value = "")
  public Integer getEventId() {
    return eventId;
  }

  public void setEventId(Integer eventId) {
    this.eventId = eventId;
  }

  public Event eventVersion(String eventVersion) {
    this.eventVersion = eventVersion;
    return this;
  }

   /**
   * event payload version
   * @return eventVersion
  **/
  @ApiModelProperty(example = "1.1", required = true, value = "event payload version")
  public String getEventVersion() {
    return eventVersion;
  }

  public void setEventVersion(String eventVersion) {
    this.eventVersion = eventVersion;
  }

  public Event eventDateTime(OffsetDateTime eventDateTime) {
    this.eventDateTime = eventDateTime;
    return this;
  }

   /**
   * Get eventDateTime
   * @return eventDateTime
  **/
  @ApiModelProperty(required = true, value = "")
  public OffsetDateTime getEventDateTime() {
    return eventDateTime;
  }

  public void setEventDateTime(OffsetDateTime eventDateTime) {
    this.eventDateTime = eventDateTime;
  }

  public Event eventType(EventTypeEnum eventType) {
    this.eventType = eventType;
    return this;
  }

   /**
   * Get eventType
   * @return eventType
  **/
  @ApiModelProperty(example = "evt_issuance", required = true, value = "")
  public EventTypeEnum getEventType() {
    return eventType;
  }

  public void setEventType(EventTypeEnum eventType) {
    this.eventType = eventType;
  }

  public Event evtIssuance(EVTIssuance evtIssuance) {
    this.evtIssuance = evtIssuance;
    return this;
  }

   /**
   * Get evtIssuance
   * @return evtIssuance
  **/
  @ApiModelProperty(value = "")
  public EVTIssuance getEvtIssuance() {
    return evtIssuance;
  }

  public void setEvtIssuance(EVTIssuance evtIssuance) {
    this.evtIssuance = evtIssuance;
  }

  public Event vtQuery(VTQuery vtQuery) {
    this.vtQuery = vtQuery;
    return this;
  }

   /**
   * Get vtQuery
   * @return vtQuery
  **/
  @ApiModelProperty(value = "")
  public VTQuery getVtQuery() {
    return vtQuery;
  }

  public void setVtQuery(VTQuery vtQuery) {
    this.vtQuery = vtQuery;
  }

  public Event vtPayment(VTPayment vtPayment) {
    this.vtPayment = vtPayment;
    return this;
  }

   /**
   * Get vtPayment
   * @return vtPayment
  **/
  @ApiModelProperty(value = "")
  public VTPayment getVtPayment() {
    return vtPayment;
  }

  public void setVtPayment(VTPayment vtPayment) {
    this.vtPayment = vtPayment;
  }

  public Event vtDispute(VTDispute vtDispute) {
    this.vtDispute = vtDispute;
    return this;
  }

   /**
   * Get vtDispute
   * @return vtDispute
  **/
  @ApiModelProperty(value = "")
  public VTDispute getVtDispute() {
    return vtDispute;
  }

  public void setVtDispute(VTDispute vtDispute) {
    this.vtDispute = vtDispute;
  }

  public Event vtDisputeStatusUpdate(VTDisputeStatusUpdate vtDisputeStatusUpdate) {
    this.vtDisputeStatusUpdate = vtDisputeStatusUpdate;
    return this;
  }

   /**
   * Get vtDisputeStatusUpdate
   * @return vtDisputeStatusUpdate
  **/
  @ApiModelProperty(value = "")
  public VTDisputeStatusUpdate getVtDisputeStatusUpdate() {
    return vtDisputeStatusUpdate;
  }

  public void setVtDisputeStatusUpdate(VTDisputeStatusUpdate vtDisputeStatusUpdate) {
    this.vtDisputeStatusUpdate = vtDisputeStatusUpdate;
  }

  public Event vtDisputeFinding(VTDisputeFinding vtDisputeFinding) {
    this.vtDisputeFinding = vtDisputeFinding;
    return this;
  }

   /**
   * Get vtDisputeFinding
   * @return vtDisputeFinding
  **/
  @ApiModelProperty(value = "")
  public VTDisputeFinding getVtDisputeFinding() {
    return vtDisputeFinding;
  }

  public void setVtDisputeFinding(VTDisputeFinding vtDisputeFinding) {
    this.vtDisputeFinding = vtDisputeFinding;
  }

  public Event evtSent(EVTSent evtSent) {
    this.evtSent = evtSent;
    return this;
  }

   /**
   * Get evtSent
   * @return evtSent
  **/
  @ApiModelProperty(value = "")
  public EVTSent getEvtSent() {
    return evtSent;
  }

  public void setEvtSent(EVTSent evtSent) {
    this.evtSent = evtSent;
  }

  public Event evtPurged(EVTPurged evtPurged) {
    this.evtPurged = evtPurged;
    return this;
  }

   /**
   * Get evtPurged
   * @return evtPurged
  **/
  @ApiModelProperty(value = "")
  public EVTPurged getEvtPurged() {
    return evtPurged;
  }

  public void setEvtPurged(EVTPurged evtPurged) {
    this.evtPurged = evtPurged;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Event event = (Event) o;
    return Objects.equals(this.eventId, event.eventId) &&
        Objects.equals(this.eventVersion, event.eventVersion) &&
        Objects.equals(this.eventDateTime, event.eventDateTime) &&
        Objects.equals(this.eventType, event.eventType) &&
        Objects.equals(this.evtIssuance, event.evtIssuance) &&
        Objects.equals(this.vtQuery, event.vtQuery) &&
        Objects.equals(this.vtPayment, event.vtPayment) &&
        Objects.equals(this.vtDispute, event.vtDispute) &&
        Objects.equals(this.vtDisputeStatusUpdate, event.vtDisputeStatusUpdate) &&
        Objects.equals(this.vtDisputeFinding, event.vtDisputeFinding) &&
        Objects.equals(this.evtSent, event.evtSent) &&
        Objects.equals(this.evtPurged, event.evtPurged);
  }

  @Override
  public int hashCode() {
    return Objects.hash(eventId, eventVersion, eventDateTime, eventType, evtIssuance, vtQuery, vtPayment, vtDispute, vtDisputeStatusUpdate, vtDisputeFinding, evtSent, evtPurged);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Event {\n");
    
    sb.append("    eventId: ").append(toIndentedString(eventId)).append("\n");
    sb.append("    eventVersion: ").append(toIndentedString(eventVersion)).append("\n");
    sb.append("    eventDateTime: ").append(toIndentedString(eventDateTime)).append("\n");
    sb.append("    eventType: ").append(toIndentedString(eventType)).append("\n");
    sb.append("    evtIssuance: ").append(toIndentedString(evtIssuance)).append("\n");
    sb.append("    vtQuery: ").append(toIndentedString(vtQuery)).append("\n");
    sb.append("    vtPayment: ").append(toIndentedString(vtPayment)).append("\n");
    sb.append("    vtDispute: ").append(toIndentedString(vtDispute)).append("\n");
    sb.append("    vtDisputeStatusUpdate: ").append(toIndentedString(vtDisputeStatusUpdate)).append("\n");
    sb.append("    vtDisputeFinding: ").append(toIndentedString(vtDisputeFinding)).append("\n");
    sb.append("    evtSent: ").append(toIndentedString(evtSent)).append("\n");
    sb.append("    evtPurged: ").append(toIndentedString(evtPurged)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  @Override
	public int compareTo(Event evt) {
		return this.eventId.compareTo(evt.getEventId());
	}
}

