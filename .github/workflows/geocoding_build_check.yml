name: CI Checks for Geocoding Service build

on:
  push:
    branches-ignore:   
      - 'release**'
      - 'main'
      - 'master'
    paths:
      - rsbc-ride-geocoding-svc/**

jobs:
  test_build:
    name: Test the Build
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4    
      - name: Setup
        uses: docker/setup-buildx-action@v2
        with:
          install: true  
      - name: Login
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build
        uses: docker/build-push-action@v3
        with:
          context: rsbc-ride-geocoding-svc
          file: rsbc-ride-geocoding-svc/Dockerfile
          push: false

  trivy-scan:
    uses: ./.github/workflows/trivy-scan-workflow.yml
    with:
      DOCKER_CONTEXT: rsbc-ride-geocoding-svc
      DOCKER_FILE: rsbc-ride-geocoding-svc/Dockerfile
      DOCKER_IMAGE_NAME: rsbc-ride-geocoding-svc
    secrets: inherit

  run_unit_test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4   
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.9
      - name: Run unit tests
        run: |
          cd rsbc-ride-geocoding-svc
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Test with pytest
        run: |
          cd rsbc-ride-geocoding-svc
          pip install pytest pytest-cov
          pytest tests/ --doctest-modules --junitxml=test-results/test-results.xml
      - name: Upload pytest test results
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results
          path: rsbc-ride-geocoding-svc/test-results/test-results.xml
        if: ${{ always() }}
